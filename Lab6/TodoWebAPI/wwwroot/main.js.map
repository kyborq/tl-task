{"version":3,"sources":["./src/environments/environment.ts","./src/app/todo-list/todo-list.component.html","./src/app/todo-list/todo-list.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"todo-page\">\n\n  <div class=\"todo-form\">\n\n    <mat-form-field class=\"task-field\">\n      <mat-label>Task</mat-label>\n      <input matInput [(ngModel)]=\"newTodo\" placeholder=\"Something to do\">\n    </mat-form-field>\n    \n    <button mat-flat-button color=\"primary\" (click)=\"addTaskHandler()\" >Add</button>\n\n  </div>\n\n  <div class=\"todo-list\" *ngFor=\"let todo of todos\">\n    <mat-checkbox class=\"task\" [(ngModel)]=\"todo.done\"  (change)=\"updateTodoHandler(todo)\">\n      <span [class.active]=\"todo.done\">\n        {{todo.name}}\n      </span>\n    </mat-checkbox>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nclass TodoItem {\n  id: number;\n  name: string;\n  done: boolean;\n  constructor (name: string) {\n    this.name = name;\n    this.done = false;\n  }\n}\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent implements OnInit {\n\n  newTodo = \"\";\n  todos: TodoItem[] = [];\n  private _http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this._http = http;\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.todos = await this._http.get<TodoItem[]>(\"/api/todo\").toPromise();\n  }\n\n  async addTaskHandler() {\n    let newTodo: TodoItem = new TodoItem(this.newTodo);\n    let newTodoID: number = await this._http.post<number>(\"/api/todo\", newTodo).toPromise();\n    newTodo.id = newTodoID;\n    this.todos.push(\n      new TodoItem(this.newTodo)\n      \n      );\n    this.newTodo = '';\n  }\n\n  async updateTodoHandler(todo: TodoItem) {\n    await this._http.put(`/api/todo/${todo.id}`, todo).toPromise();\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todo-app';\n}\n","<app-todo-list></app-todo-list>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from \"@angular/common/http\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}